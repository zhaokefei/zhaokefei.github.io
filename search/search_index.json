{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Coral","text":""},{"location":"#_1","title":"\u7b80\u4ecb","text":"<p>Coral(\u73ca\u745a)\u662f\u4e00\u4e2a\u5c01\u88c5\u4e86zeromq\u3001ros2\u7b49\u5e95\u5c42\u901a\u4fe1\u5de5\u5177\u7684\u4e0a\u5c42\u901a\u7528\u901a\u4fe1\u5305\uff0c\u540c\u65f6\u7edf\u4e00\u4e86\u6807\u51c6\u7684\u8282\u70b9\u5165\u53c2\u548c\u901a\u4fe1\u6570\u636e\u683c\u5f0f\u7684\u6846\u67b6</p>"},{"location":"#_2","title":"\u5b89\u88c5","text":"<pre><code>pip install loop-pycoral -i http://47.116.14.85:9000/simple --trusted-host 47.116.14.85\n</code></pre>"},{"location":"#_3","title":"\u529f\u80fd\u4ecb\u7ecd","text":"<ul> <li>\u7edf\u4e00\u591a\u79cd\u5e95\u5c42\u901a\u4fe1\u7684\u63a5\u53e3\u8c03\u7528, \u652f\u6301pub/sub\u6a21\u5f0f<ul> <li>zeromq</li> <li>ros2</li> <li>yarp</li> </ul> </li> <li>\u7edf\u4e00\u8282\u70b9\u7684\u5165\u53c2\u548c\u51fa\u53c2\u5b9e\u73b0</li> <li>\u7edf\u4e00\u6d88\u606f\u4f20\u9012\u8fc7\u7a0b\u4e2d\u7684\u6570\u636e\u683c\u5f0f</li> <li>\u652f\u6301\u5355\u7ebf\u7a0b/\u591a\u7ebf\u7a0b\u5904\u7406\u6d88\u606f</li> <li>\u652f\u6301\u6d88\u606f\u4f20\u9012\u4e2d\u7684numpy\u6570\u636e\u7c7b\u578b\u96f6\u62f7\u8d1d</li> <li>\u652f\u6301\u63a5\u6536\u7684\u6d88\u606f\u505a\u76f8\u5e94\u7684\u5904\u7406<ul> <li>\u6bcf\u51e0\u5e27\u5904\u7406\u4e00\u6b21</li> </ul> </li> <li>\u652f\u6301\u7edf\u8ba1\u8282\u70b9\u5404\u73af\u8282\u8017\u65f6\uff0cmqtt\u4e0a\u62a5</li> <li>\u652f\u6301\u65b9\u4fbf\u7684\u8bbe\u5b9a\u5404\u79cd\u540e\u53f0\u5f02\u6b65\u4efb\u52a1</li> <li>\u652f\u6301\u8282\u70b9\u5143\u6570\u636e\u4e0a\u62a5\u5230\u8fdc\u7aef</li> <li>\u901a\u8fc7Json\u683c\u5f0f\u914d\u7f6e\u8282\u70b9\u8fd0\u884c\u6570\u636e</li> </ul>"},{"location":"develop/","title":"\u5f00\u53d1","text":"<p>Coral\u652f\u6301\u7ee7\u627f\u5f00\u53d1\uff0c\u4f5c\u4e3a\u5f00\u53d1\u8282\u70b9\u7684\u5e95\u5c42\u7c7b\uff0c\u5b9e\u73b0\u4e86\u4e3b\u9875\u63d0\u4f9b\u7684\u5404\u79cd\u529f\u80fd\uff0c\u4e0a\u5c42\u7528\u6237\u53ea\u9700\u5173\u5fc3\u6807\u51c6\u63a5\u53e3\u5f00\u53d1\u5373\u53ef</p>"},{"location":"develop/#_2","title":"\u6700\u5c0f\u5b9e\u73b0","text":"<ul> <li><code>node.py</code> - \u4f5c\u4e3a\u7a0b\u5e8f\u8fd0\u884c\u7684\u5165\u53e3</li> </ul> <pre><code>import os\nimport sys\nimport time\nimport numpy as np\nfrom typing import List, Dict\n\nfrom pydantic import BaseModel\n\nfrom coral import CoralNode, BaseParamsModel, FirstPayload, NodeType, PTManager, RTManager, RawPayload\n\n\n# \u6ce8\u518c\u5165\u53c2\n@PTManager.register()\nclass Node1ParamsModel(BaseParamsModel):\n    width: int = 1080\n    height: int = 1280\n\n\n# \u6ce8\u518cFirstPayload\u4f5c\u4e3aReturnPayload\nRTManager.register()(FirstPayload)\n\n\nclass InputNode(CoralNode):\n\n    node_name = '\u6a21\u62df\u89c6\u9891\u6d41\u8282\u70b9'\n    node_desc = 'opencv\u968f\u673a\u751f\u6210\u89c6\u9891\u6d41\u4f20\u8f93'\n    config_fp = 'config.json'\n    node_type = NodeType.input\n\n    def init(self, context: Dict):\n        \"\"\"\u8282\u70b9\u521d\u59cb\u5316\u53c2\u6570\uff0c\u591a\u7ebf\u7a0b\u65f6\u7ebf\u7a0b\u95f4Context\u6570\u636e\u9694\u79bb\"\"\"\n        # \u83b7\u53d6\u5165\u53c2\u6570\u636e\n        timestamp = time.time()\n        context.update({'init_time': timestamp})\n\n    def sender(self, payload: RawPayload, context: Dict):\n        print('init time', context['init_time'])\n        raw = np.zeros((self.params.width, self.params.height, 3), np.uint8)\n        raw[:] = (255, 0, 0)  # BGR\u683c\u5f0f\n        return FirstPayload(raw=raw)\n\n\nif __name__ == '__main__':\n    import os\n    run_type = os.getenv(\"CORAL_NODE_RUN_TYPE\", \"run\")\n    if run_type == 'register':\n        InputNode.node_register()\n    else:\n        InputNode().run()\n</code></pre> <ul> <li><code>config.json</code> - \u4f5c\u4e3a\u7a0b\u5e8f\u8fd0\u884c\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6</li> </ul> <pre><code>{\n    \"node_id\": \"input_node\",\n    \"meta\": {\n        \"sender\": { \n            \"node_id\": \"input_node\"\n        }\n    },\n    \"params\": {\n        \"width\": 640,\n        \"height\": 640\n    }\n}\n</code></pre>"},{"location":"develop/#_3","title":"\u5404\u6a21\u5757\u89e3\u91ca","text":""},{"location":"develop/#_4","title":"\u5165\u53c2\u8bbe\u7f6e","text":"<pre><code># \u6ce8\u518c\u5165\u53c2\n@PTManager.register()\nclass Node1ParamsModel(BaseParamsModel):\n    width: int = 1080\n    height: int = 1280\n</code></pre> <p>\u8be5\u6bb5\u4ee3\u7801\u63cf\u8ff0\u4e86\u5165\u53c2\u7684\u5b9a\u4e49</p> <ul> <li><code>PTManager.register()</code>: \u6ce8\u518c\u5165\u53c2\u5230\u5165\u53c2\u7ba1\u7406\u5668\u4e2d</li> <li><code>BaseParamsModel</code>: \u6700\u57fa\u7840\u7684\u5165\u53c2\u6a21\u578b\uff0c\u9700\u8981\u5165\u53c2\u6a21\u578b\u5747\u7ee7\u627f\u8be5\u7c7b</li> </ul> <p>\u57fa\u4e8e\u4ee5\u4e0a\u7684\u88c5\u9970\u5668\u548c\u7c7b\u7ee7\u627f\u540e\uff0c\u53ef\u4ee5\u5c06\u5165\u53c2\u4ea4\u7531CoralNode\u7ba1\u7406\uff0c\u7a0b\u5e8f\u4f1a\u5728\u8fd0\u884c\u65f6\u6821\u9a8c\u5165\u53c2\u6570\u636e\u4ee5\u53ca\u5143\u6570\u636e\u4e0a\u62a5\u65f6\u6ce8\u518c\u6b63\u786e\u7684\u5165\u53c2\u683c\u5f0f\u548c\u9ed8\u8ba4\u503c\u3002</p>"},{"location":"develop/#_5","title":"\u51fa\u53c2\u8bbe\u7f6e","text":"<pre><code># \u6ce8\u518cFirstPayload\u4f5c\u4e3aReturnPayload\nRTManager.register()(FirstPayload)\n</code></pre> <p>\u8be5\u6bb5\u4ee3\u7801\u63cf\u8ff0\u4e86\u8282\u70b9\u51fa\u53c2\u7684\u5b9a\u4e49</p> <ul> <li><code>RTManager.register()</code>: \u6ce8\u518c\u51fa\u53c2\u5230\u51fa\u53c2\u7ba1\u7406\u5668\u4e2d</li> <li><code>FirstPayload</code>: \u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u6570\u636e\u8f93\u5165\u8282\u70b9\u7684\u8fd4\u56de\u7c7b, \u5b9a\u4e49\u5982\u4e0b:</li> </ul> <pre><code>class FirstPayload(ReturnPayload):\n    \"\"\"\n    \u8f93\u5165\u8282\u70b9\u8fd4\u56de\u7c7b\n    \"\"\"\n\n    raw: Union[CoralIntNdarray, str]\n</code></pre>"},{"location":"develop/#_6","title":"\u8282\u70b9\u63cf\u8ff0\u7c7b\u5c5e\u6027\u8bbe\u7f6e","text":"<pre><code>class InputNode(CoralNode):\n\n    node_name = '\u6a21\u62df\u89c6\u9891\u6d41\u8282\u70b9'\n    node_desc = 'opencv\u968f\u673a\u751f\u6210\u89c6\u9891\u6d41\u4f20\u8f93'\n    config_fp = 'config.json'\n    node_type = NodeType.input\n</code></pre> <p>\u8be5\u6bb5\u4ee3\u7801\u63cf\u8ff0\u4e86\u8282\u70b9\u63cf\u8ff0\u7c7b\u7684\u5b9a\u4e49:</p> <ul> <li><code>CoralNode</code>: \u8282\u70b9\u57fa\u7c7b\uff0c\u6240\u6709Coral\u8282\u70b9\u5f00\u53d1\u90fd\u9700\u8981\u7ee7\u627f\u8be5\u7c7b</li> <li><code>node_name</code>: \u8282\u70b9\u4e2d\u6587\u540d\u79f0</li> <li><code>node_desc</code>: \u8282\u70b9\u4e2d\u6587\u63cf\u8ff0</li> <li><code>config_fp</code>: \u8282\u70b9\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u9ed8\u8ba4\u5f53\u524d\u8def\u5f84\u4e0b\u7684<code>config.json</code>\u6587\u4ef6</li> <li><code>node_type</code>: \u8282\u70b9\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a<code>NodeType.input</code>, <code>NodeType</code>\u7c7b\u578b\u5982\u4e0b <pre><code>class NodeType(Enum):\n    input = \"input\"\n    interface = \"interface\"\n    rule = \"rule\"\n    trigger = \"trigger\"\n    output = \"output\"\n</code></pre></li> </ul> <p>\u4ee5\u4e0a\u7684\u914d\u7f6e\u4fe1\u606f\u4f1a\u5728\u8282\u70b9\u4e0a\u62a5\u65f6\u4f5c\u4e3a\u5143\u6570\u636e\u53d1\u9001\u51fa\u53bb\u3002</p>"},{"location":"develop/#_7","title":"\u8282\u70b9\u521d\u59cb\u5316\u6570\u636e\u51fd\u6570","text":"<pre><code>    ...\n\n    def init(self, context: Dict):\n        \"\"\"\u8282\u70b9\u521d\u59cb\u5316\u53c2\u6570\uff0c\u591a\u7ebf\u7a0b\u65f6\u7ebf\u7a0b\u95f4Context\u6570\u636e\u9694\u79bb\"\"\"\n        # \u83b7\u53d6\u5165\u53c2\u6570\u636e\n        timestamp = time.time()\n        context.update({'init_time': timestamp})\n</code></pre> <p>\u8be5\u6bb5\u4ee3\u7801\u63cf\u8ff0\u4e86\u8282\u70b9\u521d\u59cb\u5316\u6570\u636e\u51fd\u6570\u7684\u5b9a\u4e49:</p> <ul> <li><code>init</code> - \u8282\u70b9\u521d\u59cb\u5316\u51fd\u6570<ul> <li><code>context</code>: \u51fd\u6570\u53c2\u6570\uff0c\u7528\u4e8e\u4f20\u9012\u6570\u636e\u5230\u4e1a\u52a1\u903b\u8f91\u4e2d\uff0c\u8fd0\u884c\u65f6\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u53ea\u521d\u59cb\u5316\u4e00\u6b21</li> <li><code>context.update({})</code>: \u7528\u4e8e\u5c06\u6570\u636e\u66f4\u65b0\u5230context\u4e2d</li> </ul> </li> </ul>"},{"location":"develop/#_8","title":"\u8282\u70b9\u903b\u8f91\u5b9e\u73b0\u51fd\u6570","text":"<pre><code>    ...\n\n    def sender(self, payload: RawPayload, context: Dict):\n        print('init time', context['init_time'])\n        raw = np.zeros((self.params.width, self.params.height, 3), np.uint8)\n        raw[:] = (255, 0, 0)  # BGR\u683c\u5f0f\n        return FirstPayload(raw=raw)\n</code></pre> <p>\u8be5\u6bb5\u4ee3\u7801\u63cf\u8ff0\u4e86\u8282\u70b9\u903b\u8f91\u5b9e\u73b0\u51fd\u6570\u7684\u5b9a\u4e49:</p> <ul> <li> <p><code>sender</code>: \u8282\u70b9\u903b\u8f91\u548c\u53d1\u9001\u8282\u70b9\u6570\u636e\u51fd\u6570</p> <ul> <li><code>payload</code>\u53c2\u6570\u7528\u4e8e\u4f20\u9012\u8ba2\u9605\u7684\u8282\u70b9\u6d88\u606f\u6570\u636e\u5230\u4e1a\u52a1\u903b\u8f91\u4e2d</li> <li><code>context</code>\u53c2\u6570\u7528\u4e8e\u4f20\u9012\u8282\u70b9\u521d\u59cb\u5316\u7684\u6570\u636e\u5230\u4e1a\u52a1\u903b\u8f91\u4e2d</li> </ul> </li> <li> <p>return\u8fd4\u56de\u6570\u636e\uff0c\u53ef\u901a\u8fc7<code>return</code>\u8bed\u53e5\u8fd4\u56de, \u8fd4\u56de\u7684\u683c\u5f0f\u5fc5\u987b\u662f\u4e0a\u9762\u5b9a\u4e49\u7684<code>FirstPayload</code>\u683c\u5f0f</p> </li> </ul>"},{"location":"develop/#_9","title":"\u8fd0\u884c\u914d\u7f6e","text":"<pre><code>if __name__ == '__main__':\n    import os\n    run_type = os.getenv(\"CORAL_NODE_RUN_TYPE\", \"run\")\n    if run_type == 'register':\n        InputNode.node_register()\n    else:\n        InputNode().run()\n</code></pre> <p>\u8fd0\u884c\u914d\u7f6e\uff1a</p> <ul> <li> <p><code>CORAL_NODE_RUN_TYPE</code>: \u4f5c\u4e3a\u8282\u70b9\u8fd0\u884c\u4e2d\u7684\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u914d\u7f6e\u4e3a<code>register</code>\u548c<code>run</code>\u4e24\u79cd\u7c7b\u578b\uff0c\u652f\u6301\u8282\u70b9\u505a\u4e0d\u540c\u7684\u64cd\u4f5c</p> </li> <li> <p><code>InputNode.node_register()</code>: \u8282\u70b9\u6ce8\u518c\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u8f93\u51fa\u67e5\u770b\u4e0a\u62a5\u7684\u8282\u70b9\u6570\u636e\u683c\u5f0f\uff0c\u5982\u679c\u9700\u8981\u4e0a\u62a5\u5230\u8fdc\u7aef\u670d\u52a1\uff0c\u8fd8\u9700\u989d\u5916\u914d\u7f6e</p> </li> <li><code>InputNode().run()</code>: \u8282\u70b9\u8fd0\u884c\uff0c\u4e0d\u9700\u8981\u989d\u5916\u914d\u7f6e\uff0c\u6301\u7eed\u8ba2\u9605\u6307\u5b9a\u7684\u4e0a\u6e38\u8282\u70b9\u7684\u6570\u636e\u5e76\u5904\u7406</li> </ul>"},{"location":"develop/#configjson","title":"\u914d\u7f6e\u6587\u4ef6<code>config.json</code>","text":"<pre><code>{\n    \"node_id\": \"input_node\",\n    \"meta\": {\n        \"sender\": { \n            \"node_id\": \"input_node\"\n        }\n    },\n    \"params\": {\n        \"width\": 640,\n        \"height\": 640\n    }\n}\n</code></pre> <p>\u914d\u7f6e\u6587\u4ef6\u6700\u5c0f\u7248\u914d\u7f6e:</p> <ul> <li><code>node_id</code>: \u5f53\u524d\u8282\u70b9\u7684ID\uff0c\u9700\u8981\u4e0d\u80fd\u4e0e\u5176\u4ed6\u8282\u70b9\u540c\u540d</li> <li><code>meta</code>: \u8282\u70b9\u901a\u4fe1\u7684\u5143\u6570\u636e<ul> <li><code>sender</code>: \u53d1\u9001\u8005\u7684\u5143\u6570\u636e</li> </ul> </li> <li><code>params</code>: \u5f53\u524d\u8282\u70b9\u7684\u5165\u53c2</li> </ul>"},{"location":"template/","title":"\u6a21\u7248\u5f00\u53d1","text":""},{"location":"template/#_1","title":"\u4f7f\u7528","text":"<p>\u91c7\u7528<code>cookiecutter</code>\u5b9e\u73b0\u7684\u6a21\u677f\u4ee3\u7801\uff0c\u53ef\u4e00\u952e\u8fd0\u884c</p> <pre><code># \u5b89\u88c5\u8fd0\u884c\u5305\npip install cookiecutter\n\n\n# \u751f\u6210\u6a21\u677f\ncookiecutter https://github.com/EdgeGalaxy/CoralNodeTemplate.git\n</code></pre>"},{"location":"template/#_2","title":"\u8fd0\u884c\u8bbe\u7f6e\u53c2\u6570","text":"<ul> <li><code>node_name</code>: \u8282\u70b9\u540d\u79f0</li> <li><code>node_slug</code>: \u8282\u70b9\u6587\u4ef6\u5939\u540d\uff0c\u4e00\u822c\u91c7\u7528\u9ed8\u8ba4\u503c</li> <li><code>node_desc</code>: \u8282\u70b9\u63cf\u8ff0</li> <li><code>node_cls</code>: \u8282\u70b9\u7c7b\u540d</li> <li><code>node_type</code>: \u8282\u70b9\u7c7b\u578b<ul> <li><code>input</code>: \u6570\u636e\u751f\u4ea7\u8282\u70b9</li> <li><code>interface</code>: \u63a8\u7406\u8282\u70b9</li> <li><code>rule</code>: \u89c4\u5219\u8282\u70b9</li> <li><code>trigger</code>: \u903b\u8f91\u89e6\u53d1\u8282\u70b9</li> <li><code>output</code>: \u6570\u636e\u8f93\u51fa\u8282\u70b9</li> </ul> </li> <li><code>receiver_node</code>: \u63a5\u6536\u8282\u70b9, \u975e<code>input</code>\u8282\u70b9\u65f6\u5fc5\u586b</li> </ul>"},{"location":"examples/common/","title":"\u901a\u7528\u8282\u70b9","text":""},{"location":"examples/common/#_1","title":"\u5f00\u53d1\u914d\u7f6e","text":""},{"location":"examples/common/#_2","title":"\u4ee3\u7801\u914d\u7f6e","text":"<p>\u8fd4\u56de\u7c7b: \u9700\u8981\u7ee7\u627f<code>ReturnPayloadWithTS</code>\u8fd4\u56de\u7c7b</p> <p>\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9700\u8981\u7684\u914d\u7f6e:</p> <pre><code>...\n\n\n@RTManager.register()\nclass CommonReturnPayload(ReturnPayloadWithTS):\n    height: int\n\n\nclass CommonNode(CoralNode):\n\n    ...\n\n    def sender(self, payload: RawPayload, context: Dict) -&gt; CommonReturnPayload:\n        return CommonReturnPayload(height=100)\n</code></pre>"},{"location":"examples/common/#_3","title":"\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>{\n    \"node_id\": \"common_node\",\n    \"meta\": {\n        \"receivers\": [{\n            \"node_id\": \"interface_node\"\n        }],\n        \"sender\": {\n            \"node_id\": \"common_node\",\n            \"raw_type\": \"RawImage\"\n        }\n    },\n    \"params\": {\n        \"height\": 100\n    }\n}\n</code></pre>"},{"location":"examples/common/#_4","title":"\u5185\u7f6e\u8282\u70b9\u8fd4\u56de\u7c7b","text":"<p>\u8be5\u7c7b\u4e3a\u5185\u7f6e\u7684\u8fd4\u56de\u5b50\u7c7b\uff0c\u4e00\u822c\u88ab\u5916\u90e8\u7ee7\u627f\u4f7f\u7528\uff0c\u4f5c\u4e3a\u8fd4\u56de\u7c7b\u7684\u57fa\u7c7b</p> <pre><code>class ReturnPayloadWithTS(ReturnPayload):\n    \"\"\"\n    \u5e26\u65f6\u95f4\u6233\u7684\u8282\u70b9\u8fd4\u56de\u57fa\u7c7b\n    \"\"\"\n\n    timestamp: float = Field(default_factory=time.time)\n</code></pre>"},{"location":"examples/input/","title":"\u8f93\u5165\u8282\u70b9","text":""},{"location":"examples/input/#_1","title":"\u5f00\u53d1\u914d\u7f6e","text":""},{"location":"examples/input/#_2","title":"\u4ee3\u7801\u914d\u7f6e","text":"<p>\u8fd4\u56de\u7c7b: \u91c7\u7528\u5185\u7f6e\u7684<code>FirstPayload</code>\u7c7b</p> <p>\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9700\u8981\u7684\u914d\u7f6e:</p> <pre><code>...\n\n\n# \u6ce8\u518cFirstPayload\u4f5c\u4e3aReturnPayload\nRTManager.register()(FirstPayload)\n\n\nclass InputNode(CoralNode):\n\n    ...\n\n    def sender(self, payload: dict, context: dict) -&gt; FirstPayload:\n        raw = np.zeros((640, 640, 3), np.uint8)\n        raw[:] = (255, 0, 0)  # BGR\u683c\u5f0f\n        return FirstPayload(raw=raw)\n</code></pre>"},{"location":"examples/input/#_3","title":"\u914d\u7f6e\u6587\u4ef6","text":"<p>\u4f5c\u4e3a\u8f93\u5165\u8282\u70b9\uff0c\u901a\u4fe1\u7684\u5143\u6570\u636e\u4e2d\u5fc5\u987b\u5305\u542b <code>sender</code> \u4fe1\u606f\uff0c\u65e0\u9700\u8bbe\u7f6e <code>receivers</code> \u7684\u4fe1\u606f: <pre><code>{\n    \"node_id\": \"input_node\",\n    \"meta\": {\n        \"sender\": { \n            \"node_id\": \"input_node\"\n        }\n    },\n    \"params\": {\n        \"width\": 640,\n        \"height\": 640\n    }\n}\n</code></pre></p>"},{"location":"examples/input/#_4","title":"\u5185\u7f6e\u8282\u70b9\u8fd4\u56de\u7c7b","text":"<p>\u91c7\u7528\u5185\u7f6e\u7684 <code>FirstPayload</code> \u4f5c\u4e3a\u8fd4\u56de\u683c\u5f0f\uff0c\u9700\u8981\u4f20\u5165 <code>raw</code> \u6570\u636e, <code>FirstPayload</code> \u5185\u90e8\u683c\u5f0f\u5b9a\u4e49\u5982\u4e0b: <pre><code>class FirstPayload(ReturnPayload):\n    \"\"\"\n    \u8f93\u5165\u8282\u70b9\u8fd4\u56de\u7c7b\n    \"\"\"\n\n    raw: Union[CoralIntNdarray, str]\n</code></pre></p>"},{"location":"examples/interface/","title":"\u63a8\u7406\u8282\u70b9","text":""},{"location":"examples/interface/#_1","title":"\u5f00\u53d1\u914d\u7f6e","text":""},{"location":"examples/interface/#_2","title":"\u4ee3\u7801\u914d\u7f6e","text":"<p>\u8fd4\u56de\u7c7b: \u91c7\u7528\u5185\u7f6e\u7684<code>ObjectsPayload</code>\u7c7b</p> <p>\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9700\u8981\u7684\u914d\u7f6e:</p> <pre><code>...\n\n# \u6ce8\u518cObjectsPayload\u4f5c\u4e3aReturnPayload\nRTManager.register()(ObjectsPayload)\n\n\nclass InterfaceNode(CoralNode):\n\n    ...\n\n    def sender(self, payload: dict, context: dict) -&gt; ObjectsPayload:\n        objects = [ObjectPayload(**{\n            \"class_id\": 1,\n            \"label\": \"person\",\n            \"prob\": 0.9,\n            \"box\": Box(x1=0, y1=0, x2=100, y2=100)\n        })]\n        return ObjectsPayload(mode=InterfaceMode.APPEND, objects=objects)\n</code></pre>"},{"location":"examples/interface/#_3","title":"\u914d\u7f6e\u6587\u4ef6","text":"<p>\u4f5c\u4e3a\u63a8\u7406\u8282\u70b9\uff0c\u901a\u4fe1\u7684\u5143\u6570\u636e\u4e2d\u5fc5\u987b\u5305\u542b <code>sender</code> \u548c <code>receivers</code> \u7684\u4fe1\u606f, \u63a5\u6536\u4e0a\u6e38\u6570\u636e\u5e76\u8fd4\u56de:  <pre><code>{\n    \"node_id\": \"interface_node\",\n    \"meta\": {\n        \"receivers\": [\n            {\n                \"node_id\": \"input_node\"\n            }\n        ],\n        \"sender\": \n            {\n                \"node_id\": \"interface_node\",\n                \"raw_type\": \"RawImage\"\n            }\n    },\n    \"params\": {\n        \"weight_fp\": \"https://xxx/weights.onnx\",\n    }\n}\n</code></pre></p>"},{"location":"examples/interface/#_4","title":"\u5185\u7f6e\u8282\u70b9\u8fd4\u56de\u7c7b","text":"<p>\u91c7\u7528\u5185\u7f6e\u7684 <code>ObjectsPayload</code> \u8fd4\u56de\u7c7b, \u6bcf\u4e2a\u7c7b\u5fc5\u987b\u662f <code>ObjectPayload</code> \u7684\u6a21\u578b\u7c7b, \u7c7b\u5b9a\u4e49\u5982\u4e0b:</p> <pre><code>class InterfaceMode(Enum):\n    APPEND = \"append\"\n    OVERWRITE = \"overwrite\"\n\n\nclass ObjectsPayload(BaseInterfacePayload):\n    \"\"\"\n    Yolo\u63a8\u7406\u8fd4\u56de\u7c7b\n    \"\"\"\n\n    mode: InterfaceMode\n    objects: Union[List[ObjectPayload], NoneType] = None\n</code></pre> <ul> <li><code>mode</code>: \u63a8\u7406\u6570\u636e\u4e0e\u4e0a\u5c42\u8ba2\u9605\u7684\u6570\u636e\u5982\u4f55\u5408\u5e76\u7684\u6a21\u5f0f<ul> <li><code>APPEND</code>: \u8ffd\u52a0\u6a21\u5f0f\uff0c\u82e5<code>RawPaylod</code>\u7684<code>objects</code>\u4e2d\u5b58\u5728\u6570\u636e\uff0c\u5219\u8ffd\u52a0</li> <li><code>OVERWRITE</code>: \u8986\u76d6\u6a21\u5f0f\uff0c\u76f4\u63a5\u5b8c\u5168\u8986\u76d6<code>RawPaylod</code>\u7684<code>objects</code>\u4e2d\u7684\u6570\u636e</li> </ul> </li> <li><code>objects</code>: \u63a8\u7406\u7ed3\u679c\u5217\u8868, \u6bcf\u4e2a\u5143\u7d20\u90fd\u662f<code>ObjectPayload</code></li> </ul> <pre><code>class Box(CoralBaseModel):\n    \"\"\"\n    \u5750\u6807\u70b9\n    \"\"\"\n\n    x1: int\n    y1: int\n    x2: int\n    y2: int\n\n\nclass ObjectPayload(BaseInterfaceItemPayload):\n    \"\"\"\n    Yolo\u63a8\u7406\u4efb\u52a1\u5355\u9879\u7ed3\u679c\n    \"\"\"\n\n    id: Optional[Union[int, NoneType]] = None\n    label: str\n    class_id: int\n    prob: float\n    box: Optional[Union[Box, NoneType]] = None\n    objects: Optional[Union[List[\"ObjectPayload\"], NoneType]] = None\n</code></pre> <ul> <li><code>id</code>: \u975e\u5fc5\u586b\u53c2\u6570\uff0c\u7528\u4e8e\u6807\u8bc6\u5bf9\u8c61\u7684id</li> <li><code>label</code>: \u5bf9\u8c61\u7c7b\u522b</li> <li><code>class_id</code>: \u5bf9\u8c61\u7c7b\u522bid</li> <li><code>prob</code>: \u5bf9\u8c61\u7f6e\u4fe1\u5ea6</li> <li><code>box</code>: \u5bf9\u8c61\u6846<ul> <li><code>x1</code>: \u5de6\u4e0a\u89d2x\u5750\u6807</li> <li><code>y1</code>: \u5de6\u4e0a\u89d2y\u5750\u6807</li> <li><code>x2</code>: \u53f3\u4e0b\u89d2x\u5750\u6807</li> <li><code>y2</code>: \u53f3\u4e0b\u89d2y\u5750\u6807</li> </ul> </li> <li><code>objects</code>: \u5bf9\u8c61\u5217\u8868</li> </ul>"},{"location":"examples/node_type/","title":"\u8282\u70b9\u7c7b\u578b\u5b9a\u4e49","text":"<ul> <li><code>input</code>: \u8f93\u5165\u8282\u70b9\uff0c\u8282\u70b9\u5185\u83b7\u53d6\u4f20\u611f\u5668\u6216\u8005\u5185\u90e8\u81ea\u5df1\u4ea7\u751f\u6570\u636e\uff0c\u65e0\u9700\u8ba2\u9605\u5916\u90e8\u6570\u636e\u7684\u8282\u70b9\u7c7b\u578b</li> <li><code>interface</code>: \u63a8\u7406\u8282\u70b9\uff0c\u8ba2\u9605\u4e0a\u6e38\u8282\u70b9\u6570\u636e\uff0c\u4f9d\u636e\u6570\u636e\u6e90\u8fdb\u884c\u6a21\u578b\u63a8\u7406\uff0c\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u5b58\u50a8\u63a8\u7406\u6570\u636e</li> <li><code>rule</code>: \u89c4\u5219\u8282\u70b9\uff0c\u6267\u884c\u89c4\u5219\uff0c\u8ba2\u9605\u4e0a\u6e38\u8282\u70b9\u6570\u636e\uff0c\u6267\u884c\u5185\u90e8\u903b\u8f91\u540e\uff0c\u51b3\u5b9a\u5bf9\u5f53\u524d\u6570\u636e\u505a\u4e22\u5f03\u8fd8\u662f\u4fdd\u7559\u53d1\u9001</li> <li><code>trigger</code>: \u89e6\u53d1\u8282\u70b9\uff0c\u8ba2\u9605\u4e0a\u6e38\u8282\u70b9\u6570\u636e\uff0c\u4f9d\u636e\u4f20\u5165\u7684\u53c2\u6570\u89e6\u53d1\u5f53\u524d\u6570\u636e\u7684\u5904\u7406</li> <li><code>output</code>: \u8f93\u51fa\u8282\u70b9\uff0c\u8ba2\u9605\u4e0a\u6e38\u8282\u70b9\u6570\u636e\uff0c\u4f5c\u4e3a\u53ef\u89c6\u5316\u7684\u6570\u636e\u6d41\u8f93\u51fa</li> </ul>"},{"location":"examples/performance/","title":"\u6027\u80fd\u6a21\u5f0f","text":""},{"location":"examples/performance/#_1","title":"\u591a\u7ebf\u7a0b\u52a0\u901f\u8282\u70b9\u5904\u7406\u6548\u7387","text":"<p>\u9002\u7528\u4e8e:</p> <ol> <li>\u5f53\u524d\u8282\u70b9\u4e1a\u52a1\u5904\u7406\u8017\u65f6</li> <li>\u4e00\u5e27\u5e27\u6570\u636e\u95f4\u6ca1\u6709\u524d\u540e\u5173\u8054</li> <li>\u670d\u52a1\u5668\u8d44\u6e90\u53ef\u8d1f\u8377\u591a\u7ebf\u7a0b\u8d44\u6e90\u6d88\u8017</li> </ol> <p>\u5f00\u53d1\u6ce8\u610f\u4e8b\u9879:</p> <ul> <li>\u56e0\u4e3a\u91c7\u7528\u591a\u7ebf\u7a0b\u6a21\u5f0f\u5904\u7406\uff0c\u56e0\u6b64\u7ebf\u7a0b\u9694\u79bb\u7684\u6570\u636e\u9700\u8981\u5728<code>init</code>\u51fd\u6570\u4e2d\u521d\u59cb\u5316</li> </ul> <p>\u914d\u7f6e</p> <p>\u53ea\u9700\u5728\u914d\u7f6e\u6587\u4ef6<code>config.json</code>\u4e2d\u6dfb\u52a0\u53c2\u6570\u5373\u53ef</p> <pre><code>{\n    \"process\": {\n        \"enable_parallel\": true,\n        \"count\": 5,\n        \"max_qsize\": 180\n    }\n}\n</code></pre> <ul> <li><code>process</code>: \u7cfb\u7edf\u53c2\u6570\u8bbe\u5b9a\uff0c\u9ed8\u8ba4\u5355\u7ebf\u7a0b<ul> <li><code>enable_parallel</code>: \u662f\u5426\u5f00\u542f\u591a\u7ebf\u7a0b</li> <li><code>count</code>: \u591a\u7ebf\u7a0b\u6570\u91cf</li> <li><code>max_qsize</code>: \u591a\u7ebf\u7a0b\u7b49\u5f85\u961f\u5217\u7684\u6700\u5927\u957f\u5ea6</li> </ul> </li> </ul>"},{"location":"examples/performance/#_2","title":"\u5185\u5b58\u96f6\u62f7\u8d1d\u52a0\u901f\u8282\u70b9\u901a\u4fe1\u5ef6\u8fdf","text":"<p>\u9002\u7528\u4e8e:</p> <ul> <li>\u8282\u70b9\u95f4\u4f20\u8f93\u7684\u6570\u636e\u6bd4\u8f83\u5927</li> <li>\u4ec5\u9650<code>RawPayload</code>\u4e2d\u7684<code>raw</code>\u6570\u636e\u96f6\u62f7\u8d1d</li> <li>\u591a\u4e2a\u5173\u8054\u8282\u70b9\u540c\u65f6\u5f00\u542f\u65f6\uff0c\u5185\u5b58\u4e2d\u7684\u6570\u636e\u4f1a\u6301\u7eed\u5b58\u5728</li> <li>\u9700\u8981\u591a\u4e2a\u8282\u70b9\u5171\u4eab<code>/dev/shm</code>\u8def\u5f84</li> </ul> <p>\u914d\u7f6e</p> <p>\u53ea\u9700\u5728\u914d\u7f6e\u6587\u4ef6<code>config.json</code>\u4e2d\u6dfb\u52a0\u53c2\u6570\u5373\u53ef</p> <pre><code>{\n    \"generic\": {\n        \"enable_shared_memory\": true\n    }\n}\n</code></pre> <ul> <li><code>generic</code>: \u8282\u70b9\u901a\u7528\u53c2\u6570\uff0c\u9ed8\u8ba4\u672c\u5730\u6d4b\u8bd5\u5173\u95ed<ul> <li><code>enable_shared_memory</code>: \u662f\u5426\u5f00\u542f\u5185\u5b58\u96f6\u62f7\u8d1d</li> </ul> </li> </ul>"},{"location":"modules/common/","title":"\u901a\u7528\u6a21\u5757","text":""},{"location":"modules/common/#_1","title":"\u540e\u53f0\u4efb\u52a1\u6267\u884c\u65b9\u5f0f","text":"<pre><code>class InputNode(CoralNode):\n\n    ...\n\n    def do_job():\n        time.sleep(5)\n        print('do sleep!')\n\n    def init(self, context: dict):\n        # \u8282\u70b9\u521d\u59cb\u5316\u65f6\u6267\u884c\u4efb\u52a1\n        self.bg_tasks.add_job(self.do_job, 'interval', seconds=10)\n\n    ...\n</code></pre>"},{"location":"modules/common/#_2","title":"\u73af\u5883\u53d8\u91cf\u914d\u7f6e","text":"<ul> <li><code>MOUNT_PATH</code>: \u6240\u6709node\u7edf\u4e00\u6302\u8f7d\u7684\u8def\u5f84</li> <li><code>CORAL_NODE_CONFIG_PATH</code>: \u8282\u70b9\u914d\u7f6e\u6587\u4ef6\u53d8\u91cf</li> <li><code>CORAL_NODE_BASE64_DATA</code>: \u8282\u70b9\u914d\u7f6eBas64\u73af\u5883\u53d8\u91cf, \u4f18\u5148\u7ea7\u9ad8\u4e8e<code>CORAL_NODE_CONFIG_PATH</code></li> <li><code>NODE_ID</code>: \u6ce8\u518c\u5230\u8fdc\u7aef\u670d\u52a1\u7684\u8282\u70b9ID</li> <li><code>NODE_VERSION</code>: \u6ce8\u518c\u5230\u8fdc\u7aef\u670d\u52a1\u7684\u8282\u70b9\u7248\u672c</li> <li><code>NODE_IMAGE</code>: \u6ce8\u518c\u5230\u8fdc\u7aef\u670d\u52a1\u7684\u8282\u70b9\u955c\u50cf</li> <li><code>REGISTER_URL</code>: \u6ce8\u518c\u5230\u8fdc\u7aef\u670d\u52a1\u7684\u5730\u5740 </li> <li><code>ENABLE_SHARED_MEMORY</code>: \u662f\u5426\u5f00\u542f\u5171\u4eab\u5185\u5b58, \u9ed8\u8ba4\u4e0d\u5f00\u542f</li> <li><code>CORAL_NODE_SHARED_MEMORY_EXPIRE</code>: \u8282\u70b9\u5171\u4eab\u5185\u5b58\u8fc7\u671f\u65f6\u95f4, \u9ed8\u8ba420\u79d2</li> </ul>"},{"location":"modules/communication/","title":"\u901a\u4fe1\u6a21\u5757","text":""},{"location":"modules/communication/#_1","title":"\u5185\u7f6e\u901a\u4fe1\u6570\u636e\u683c\u5f0f\u57fa\u7c7b","text":"<pre><code>class BaseRawPayload(CoralBaseModel):\n    \"\"\"\n    Base\u901a\u7528\u8282\u70b9\u901a\u4fe1\u6570\u636e\u7c7b, \u6db5\u76d6\u5171\u4eab\u5185\u5b58\u7684\u7ba1\u7406\n    \"\"\"\n\n    raw_id: str = Field(default_factory=lambda: generate_short_uid())\n\n    _raw: CoralIntNdarray = PrivateAttr(default=None)\n    _raw_shared_memory_id: str = PrivateAttr(default=None)\n    _enable_shared_memory: bool = PrivateAttr(default=False)\n\n    ...\n\n    @computed_field\n    def raw(self) -&gt; np.array:\n        return self._raw\n\n    @computed_field\n    def raw_shared_memory_id(self) -&gt; str:\n        return self._raw_shared_memory_id\n\n\n    def set_raw(self, raw: np.ndarray):\n        ....\n\n\n\nclass RawPayload(BaseRawPayload):\n    \"\"\"\n    \u901a\u7528\u8282\u70b9\u901a\u4fe1\u6570\u636e\u7c7b\n    \"\"\"\n\n    source_id: str\n    nodes_cost: float = 0\n    timestamp: float = Field(default_factory=time.time)\n    objects: Union[List[ObjectPayload], NoneType] = None\n    metas: Union[Dict[str, ReturnPayload], NoneType] = None\n</code></pre> <p>\u53c2\u6570\u89e3\u91ca: </p> <ul> <li><code>source_id</code>: \u7b2c\u4e00\u4e2a\u8f93\u5165\u6570\u636e\u7684\u8282\u70b9ID</li> <li><code>nodes_cost</code>: \u7b2c\u4e00\u4e2a\u8282\u70b9\u5230\u5f53\u524d\u8282\u70b9\u7684\u603b\u8017\u65f6</li> <li><code>timestamp</code>: \u5f53\u524d\u8282\u70b9\u5904\u7406\u5b8c\u6bd5\u7684\u65f6\u95f4\u6233</li> <li><code>objects</code>: \u63a8\u7406\u8282\u70b9\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f</li> <li><code>metas</code>:  \u901a\u7528\u8282\u70b9\u5b58\u50a8\u6570\u636e\u7684\u5bb9\u5668</li> </ul> <p>\u901a\u4fe1\u7c7b<code>RawPayload</code> \u652f\u6301\u7684\u64cd\u4f5c:</p> <ul> <li><code>payload.raw</code>: \u83b7\u53d6\u8f93\u5165\u7684numpy\u6570\u636e</li> <li><code>payload.raw_id</code>: \u83b7\u53d6\u5f53\u524d\u8f93\u5165\u6570\u636e\u7684\u552f\u4e00ID</li> <li><code>payload.set_raw(raw)</code>: \u66f4\u6539\u8f93\u5165\u7684numpy\u6570\u636e</li> </ul>"},{"location":"modules/communication/#_2","title":"\u7ee7\u627f\u57fa\u7c7b\u5b9e\u73b0\u7684\u901a\u4fe1\u7c7b","text":""},{"location":"modules/communication/#_3","title":"\u56fe\u7247\u6570\u636e\u901a\u4fe1","text":"<pre><code>@DTManager.register(\"RawImage\")\nclass RawImagePayload(RawPayload):\n    \"\"\"\n    \u56fe\u7247\u7c7b\u901a\u4fe1\u6570\u636e\u7c7b\n    \"\"\"\n\n    def check_raw_data(self, raw: np.ndarray):\n        raw = super().check_raw_data(raw)\n        if not isinstance(raw, np.ndarray):\n            raise ValueError(\"raw \u53c2\u6570\u5fc5\u987b\u662f\u4e00\u4e2a CoralIntNdarray \u5bf9\u8c61\")\n\n        if len(raw.shape) != 3 or raw.shape[2] not in [3, 4]:\n            raise ValueError(\n                f\"\u56fe\u7247\u5fc5\u987b\u662f 3-\u901a\u9053 (RGB/BGR) \u6216 4-\u901a\u9053 (RGBA/BGRA) shape\u683c\u5f0f\u7684\u6570\u7ec4, \u76ee\u524d\u7684shape\u503c\u4e3a: {raw.shape}\"\n            )\n\n        if raw.dtype != np.uint8:\n            raise ValueError(\"\u56fe\u7247\u5fc5\u987b\u662f uint8 \u683c\u5f0f\")\n        return raw\n</code></pre> <p>\u56fe\u7247\u6570\u636e\u901a\u4fe1\u7c7b\u5b9a\u4e49\uff1a</p> <ul> <li> <p><code>DTManager.register(\"RawImage\")</code>: \u6ce8\u518c\u8282\u70b9\u7c7b\u578b</p> <ul> <li><code>RawImage</code>: \u56fe\u7247\u7c7b\u6570\u636e\u5bf9\u5916\u7684ID\uff0c\u9ed8\u8ba4\u7684\u901a\u4fe1\u7c7b\u578b\u3002\u5728<code>config.json</code>\u4e2d\u53ef\u914d\u7f6e\u8282\u70b9\u51fa\u5165\u53c2\u7c7b\u578b</li> </ul> </li> <li> <p><code>check_raw_data</code>: \u6821\u9a8c\u8f93\u5165\u7684\u6570\u636e\u662f\u5426\u7b26\u5408\u89c4\u8303\u56fe\u7247\u683c\u5f0f</p> </li> </ul>"},{"location":"modules/monitoring/","title":"\u76d1\u63a7\u6a21\u5757","text":""},{"location":"modules/monitoring/#_1","title":"\u76d1\u63a7\u6307\u6807","text":"<ul> <li><code>process_frames_count</code>: \u5f53\u524d\u8282\u70b9\u5904\u7406\u7684\u5e27\u6570, \u5904\u7406\u4e00\u5e27\u53d1\u9001\u4e00\u6b21</li> <li><code>drop_frames_count</code>: \u5f53\u524d\u8282\u70b9\u4e22\u5f03\u7684\u5e27\u6570, \u4e22\u5f03\u4e00\u5e27\u53d1\u9001\u4e00\u6b21</li> <li><code>skip_frames_count</code>: \u5f53\u524d\u8282\u70b9\u8df3\u8fc7\u7684\u5e27\u6570, \u8df3\u8fc7\u4e00\u5e27\u53d1\u9001\u4e00\u6b21</li> <li><code>process_frames_cost</code>: \u5f53\u524d\u8282\u70b9\u7eaf\u5904\u7406\u7684\u6d88\u8017\u65f6\u95f4</li> <li><code>pendding_frames_cost</code>: \u5f53\u524d\u8282\u70b9\u4ece\u4e0a\u4e00\u4e2a\u8282\u70b9\u8ba2\u9605\u6570\u636e\u5230\u63a5\u6536\u7684\u6d88\u8017\u65f6\u95f4</li> <li><code>process_node_cost</code>: \u5f53\u524d\u8282\u70b9\u603b\u8017\u65f6</li> </ul>"},{"location":"modules/monitoring/#mqtt-topic","title":"MQTT \u901a\u7528\u683c\u5f0fTOPIC\u5b9a\u4e49","text":"<p>TOPIC \u5b9a\u4e49\u683c\u5f0f: <code>organization/+/gateway/+/pipeline/+/node/+/+/+</code></p> <p>\u6bcf\u4e00\u4e2a<code>+</code>\u4ee3\u8868\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u4f9d\u6b21\u4e3a:</p> <ul> <li><code>organization_id</code> \u7ec4\u7ec7/\u7528\u6237ID</li> <li><code>gateway_id</code> \u7f51\u5173ID</li> <li><code>pipeline_id</code> \u7ba1\u9053ID</li> <li><code>node_id</code> \u8282\u70b9ID</li> <li><code>metric</code> \u8282\u70b9\u76d1\u63a7\u6307\u6807, \u4ee5\u4e0a\u5b9a\u4e49\u7684\u76d1\u63a7\u6307\u6807</li> <li><code>data_type</code> \u6570\u636e\u7c7b\u578b</li> </ul>"},{"location":"modules/monitoring/#_2","title":"\u81ea\u5b9a\u4e49\u6307\u6807\u4e0a\u62a5\u5b9e\u73b0","text":"<pre><code>class InputNode(CoralNode):\n\n    ...\n\n    def sender(self, payload: RawPayload, context: dict):\n        time.sleep(0.05)\n        # \u81ea\u5b9a\u4e49\u6307\u6807\u4f7f\u7528\n        self.metrics.business_set('business_topic_defind', 1)\n        return FirstPayload(raw=context['raw'])\n</code></pre>"},{"location":"modules/monitoring/#_3","title":"\u4e0a\u62a5\u6307\u6807\u914d\u7f6e\u6587\u4ef6\u8bbe\u7f6e","text":"<p>\u9ed8\u8ba4\u8282\u70b9Metrics\u4e0a\u62a5\u7684\u914d\u7f6e\u6587\u4ef6\u4e00\u822c\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u4e0e<code>config.json</code>\u6587\u4ef6\u5206\u5f00\uff0c\u653e\u7f6e\u5728 <code>$HOME/.coral/common-config.json</code> \u8def\u5f84\u4e0b</p> <pre><code>{\n    \"organization_id\": \"coral-user\",\n    \"gateway_id\": \"coral-gateway\",\n    \"mqtt\": {\n        \"broker\": \"localhost\",\n        \"port\": 1883,\n        \"username\": \"admin\",\n        \"password\": \"admin\"\n    }\n}\n</code></pre>"},{"location":"modules/params/","title":"\u5165\u53c2\u6a21\u5757","text":""},{"location":"modules/params/#_1","title":"\u6a21\u578b\u7c7b\u5b9a\u4e49","text":""},{"location":"modules/params/#_2","title":"\u914d\u7f6e\u7c7b","text":"<pre><code>class ConfigModel(CoralBaseModel):\n    \"\"\"\n    \u8282\u70b9\u901a\u7528\u914d\u7f6e\u7c7b\n    \"\"\"\n    pipeline_id: str = Field(frozen=True, default=\"default_pipeline\")\n    node_id: str = Field(frozen=True)\n    process: ProcessModel = Field(frozen=True, default=ProcessModel())\n    meta: MetaModel = Field(frozen=True)\n    generic: GenericParamsModel = Field(frozen=True, default=GenericParamsModel())\n    params: Dict = Field(frozen=True, default=None)\n</code></pre> <ul> <li><code>pipeline_id</code>: \u591a\u4e2anode_id\u7ec4\u6210\u7684pipeline\u7684ID</li> <li><code>node_id</code>: \u8282\u70b9ID</li> <li><code>process</code>: \u8fdb\u7a0b\u914d\u7f6e</li> <li><code>meta</code>: \u901a\u4fe1\u5143\u6570\u636e\u914d\u7f6e</li> <li><code>generic</code>: \u8282\u70b9\u901a\u7528\u6a21\u5f0f\u914d\u7f6e</li> <li><code>params</code>: \u8282\u70b9\u5165\u53c2</li> </ul>"},{"location":"modules/params/#_3","title":"\u914d\u7f6e\u7c7b\u7684\u5404\u90e8\u5206\u5b50\u7c7b","text":"<ul> <li> <p>\u7cfb\u7edf\u53c2\u6570\u8bbe\u5b9a <pre><code>class ProcessModel(CoralBaseModel):\n    \"\"\"\n    \u7cfb\u7edf\u53c2\u6570\u8bbe\u5b9a\n    \"\"\"\n    max_qsize: int = Field(frozen=True, default=180)\n    count: int = Field(frozen=True, default=3)\n    enable_parallel: bool = Field(frozen=True, default=False)\n</code></pre></p> </li> <li> <p>\u4e1a\u52a1\u901a\u7528\u53c2\u6570 <pre><code>class GenericParamsModel(CoralBaseModel):\n    \"\"\"\n    \u4e1a\u52a1\u901a\u7528\u53c2\u6570\n    \"\"\"\n    skip_frame: int = Field(frozen=True, default=0, description=\"\u6bcf\u9694\u51e0\u5e27\u5904\u7406\u4e00\u6b21\")\n    enable_metrics: bool = Field(frozen=True, default=True, description=\"\u662f\u5426\u5f00\u542f\u670d\u52a1\u76d1\u63a7\")\n    enable_shared_memory: bool = Field(frozen=True, default=False, validate_default=True, description=\"\u662f\u5426\u5f00\u542f\u5171\u4eab\u5185\u5b58\")\n</code></pre></p> </li> <li> <p>Sender &amp; Receivers \u901a\u4fe1\u7c7b  <pre><code>class MetaModel(CoralBaseModel):\n    \"\"\"\n    sender &amp; receiver \u901a\u4fe1\u7c7b\n    \"\"\"\n    mode: str = Field(frozen=True, default=ProtocalType.PUBSUB)\n    receivers: List[ReceiverModel] = Field(frozen=True, default=[])\n    sender: SenderModel = Field(frozen=True, default=None)\n</code></pre> <pre><code>class PubSubBaseModel(CoralBaseModel):\n    \"\"\"\n    \u8282\u70b9\u901a\u4fe1\u901a\u7528\u683c\u5f0f\n    \"\"\"\n    node_id: str = Field(frozen=True)\n    raw_type: str = Field(frozen=True, default=\"RawImage\")\n    mware: str = Field(frozen=True, default=\"zeromq\")\n    cls_name: str = Field(frozen=True, default=\"NoReceiverUse\")\n    topic: str = Field(default=None)\n    carrier: str = Field(frozen=True, default=\"tcp\")\n    blocking: bool = Field(frozen=True, default=False)\n    socket_sub_port: int = Field(default=5556)\n    socket_pub_port: int = Field(default=5555)\n    params: Dict[str, Union[str, int, bool, float]] = Field(frozen=True, default={})\n\n\nclass ReceiverModel(PubSubBaseModel):\n    pass\n\n\nclass SenderModel(PubSubBaseModel):\n    pass\n</code></pre></p> <ul> <li><code>node_id</code>: \u8282\u70b9ID</li> <li><code>raw_type</code>: \u901a\u4fe1\u7684\u6570\u636e\u7c7b\u578b, \u9ed8\u8ba4<code>RawImage</code>, \u56fe\u50cf\u7c7b\u901a\u4fe1\u6570\u636e</li> <li><code>mware</code>: \u901a\u4fe1\u7684\u4e2d\u95f4\u4ef6, \u9ed8\u8ba4<code>zeromq</code></li> <li><code>cls_name</code>: \u901a\u4fe1\u7684\u7c7b\u540d, \u9ed8\u8ba4<code>NoReceiverUse</code>, \u5360\u4f4d\u7b26</li> <li><code>topic</code>: \u901a\u4fe1\u7684topic</li> <li><code>carrier</code>: \u901a\u4fe1\u7684\u534f\u8bae</li> <li><code>blocking</code>: \u662f\u5426\u963b\u585e</li> <li><code>socket_sub_port</code>: \u8ba2\u9605\u7aef\u53e3</li> <li><code>socket_pub_port</code>: \u53d1\u5e03\u7aef\u53e3</li> <li><code>params</code>: \u901a\u4fe1\u989d\u5916\u7684\u53c2\u6570, \u4e00\u822c\u4e0d\u914d\u7f6e</li> </ul> </li> </ul>"}]}